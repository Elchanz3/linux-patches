From 479cb6dff68dd63c06c5732e5b648f1556442f95 Mon Sep 17 00:00:00 2001
From: Alexandre Frade <kernel@xanmod.org>
Date: Thu, 9 Sep 2021 15:35:50 +0000
Subject: [PATCH] XANMOD: sched/core: Add yield type tunable

Signed-off-by: Alexandre Frade <kernel@xanmod.org>
---
 kernel/sched/core.c |  8 +++++++-
 kernel/sysctl.c     | 11 +++++++++++
 2 files changed, 18 insertions(+), 1 deletion(-)

diff --git a/kernel/sched/core.c b/kernel/sched/core.c
index 744905ad31ed..d6bbbe177396 100644
--- a/kernel/sched/core.c
+++ b/kernel/sched/core.c
@@ -370,6 +370,7 @@ static inline void sched_core_dequeue(struct rq *rq, struct task_struct *p) { }
  */
 int sysctl_sched_rt_runtime = 950000;
 
+int sysctl_yield_type __read_mostly = 1;
 
 /*
  * Serialization rules:
@@ -7818,10 +7819,15 @@ static void do_sched_yield(void)
 	struct rq_flags rf;
 	struct rq *rq;
 
+	if (!sysctl_yield_type)
+		return;
+
 	rq = this_rq_lock_irq(&rf);
 
 	schedstat_inc(rq->yld_count);
-	current->sched_class->yield_task(rq);
+
+	if (sysctl_yield_type > 1)
+		current->sched_class->yield_task(rq);
 
 	preempt_disable();
 	rq_unlock_irq(rq, &rf);
diff --git a/kernel/sysctl.c b/kernel/sysctl.c
index ead16114f575..d94c868c2273 100644
--- a/kernel/sysctl.c
+++ b/kernel/sysctl.c
@@ -129,6 +129,8 @@ extern int hrtimeout_min_us;
 static int six_hundred_forty_kb = 640 * 1024;
 #endif
 
+extern int sysctl_yield_type;
+
 /* this is needed for the proc_doulongvec_minmax of vm_dirty_bytes */
 static unsigned long dirty_bytes_min = 2 * PAGE_SIZE;
 
@@ -1827,6 +1829,15 @@ static struct ctl_table kern_table[] = {
 		.mode		= 0644,
 		.proc_handler	= sched_rr_handler,
 	},
+	{
+		.procname	= "yield_type",
+		.data		= &sysctl_yield_type,
+		.maxlen		= sizeof (int),
+		.mode		= 0644,
+		.proc_handler	= proc_dointvec,
+		.extra1		= SYSCTL_ZERO,
+		.extra2		= &two,
+	},
 #ifdef CONFIG_UCLAMP_TASK
 	{
 		.procname	= "sched_util_clamp_min",
-- 
2.33.0

